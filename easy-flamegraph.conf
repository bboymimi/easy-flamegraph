# Enable all the flamegraphs in crontab profiling(/etc/cron.d/ez-flamegraph)
# This is the switch to enable all the flamegraphs profiling(cpu/mem/io/net...).
USE_EASY_FLAMEGRAPH=true

# All scripts
EASY_FLAME_LIB_DIR=/usr/lib/easy-flamegraph
EASY_FLAME_COND_DIR=/usr/lib/easy-flamegraph/conditions

# Specify the output directory
EASY_FLAME_OUTPUT=/var/log/easy-flamegraph

# Enable log
EASY_FLAME_LOG_ENABLE=true
EASY_FLAME_LOG_CONSOLE=false
EASY_FLAME_LOG_FILE=true
EASY_FLAME_LOG=/var/log/easy-flamegraph/log

# Perf output directory
EASY_FLAME_PERF_DIR=/var/log/easy-flamegraph/perf-output

# Global settings
# Specify the sampling rate
G_SRATE=99
# Specify PID for perf record
G_PID=
# How many seconds perf record should run
G_PERF_PERIOD=5
# By default, keep the .svg only to save space
# There are three options: svg/tar/none
G_KEEP_SVG=true
# Tar the profiling result
G_KEEP_TAR=false
# Generate the per-cpu flamegraph
G_PER_CPU_FLAMEGRAPH=false


# By default, disable the mem profiling. The mem flamegraph will be placed under
# /var/log/easy-flamegraph/mem/
USE_MEM=false
# Set up the RSS threshold to start the memory allocation profiling
USE_MEM_THRESHOLD_SIZE=
# Hook the glibc malloc
USE_MEM_GLIBC=false
# Hook the kmem
USE_MEM_KMEM=false
# Hook the tcmalloc
USE_MEM_TCMALLOC=false


# By default, enable the CPU profiling
USE_CPU=false
# Specifiy the threshold of CPU utilization to start to profile. The CPU
# threshold is by default set to 25%. That means, for example, if there are 100
# CPUs in the system, 25 CPUs are in 100 CPU utilization. Currently, the CPU
# utilization is based on the 'Average: all' column '%idle' with command mpstat
# to profile 1 second: "mpstat -P ON 1 1".
#
# WARNING! For specific CPU utlization, the implementation needs to be improved
# to support the per-CPU utilization sampling.
CPU_THRESHOLD=25


# IO flamegraph
USE_IO=true
# Threshold, conditions to trigger perf record
# Which disks to minitor
USE_IO_DISK=sda
# If IO exceeds this threshold(KB)
READ_THRESHOLD=
WRITE_THRESHOLD=10000

# Maybe, in the future we can develpe the NET flamegraph
# USE_NET=false
